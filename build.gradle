plugins {
    id "net.minecraftforge.gradle.forge" version "6f5327"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "org.jetbrains.kotlin.jvm" version "1.5.21"
    id "org.spongepowered.mixin" version "d5f9873d60"
    id "java"
    id "idea"
}

version = "0.3.2"
group = "skytils.skytilsmod"
archivesBaseName = "Skytils"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    gitVersion = false
    clientJvmArgs += "-Dfml.coreMods.load=skytils.skytilsmod.tweaker.FMLLoadingPlugin"
    clientRunArgs += "--mixin mixins.skytils.json"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
}

configurations {
    packageLib
    configurations.implementation.extendsFrom(configurations.packageLib)
}


dependencies {
    packageLib("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        transitive = false
    }
    provided files("libs/modcore.jar")
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.skytils.refmap.json"
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "Main-Class": "SkytilsInstallerFrame",
            "FMLCorePlugin": "skytils.skytilsmod.tweaker.FMLLoadingPlugin",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.skytils.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
    )

    from {
        configurations.packageLib.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main { output.resourcesDir = java.outputDir }
}